@page
@model NewModel
@{
    ViewData["Title"] = "Messenger";
    Layout = "";
    var user = Request.Query["user"].ToString();
}

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link rel="apple-touch-icon" sizes="76x76" href="../assets/img/apple-icon.png">
  <link rel="icon" type="image/png" href="../assets/img/favicon.png">
   <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>
    <script src="~/lib/signalr/jquery.signalR.js"></script>
    <script src="~/js/chat.js"></script>
    <style>
        .suggestions-container {
  position: relative;
  max-height: 200px;
  overflow-y: auto;
  border: 1px solid #ccc;
  border-radius: 4px;
  background-color: #fff;
}

.suggestion-item {
  padding: 8px;
  cursor: pointer;
}

.suggestion-item:hover {
  background-color: #f5f5f5;
}

.suggestion-item.highlight {
  background-color: #e0e0e0;
}

    </style>
  <title>
    Messenger App
  </title>
  <!--     Fonts and icons     -->
  <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900|Roboto+Slab:400,700" />
  <!-- Nucleo Icons -->
  <link href="../assets/css/nucleo-icons.css" rel="stylesheet" />
  <link href="../assets/css/nucleo-svg.css" rel="stylesheet" />
  <!-- Font Awesome Icons -->
  <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
  <!-- Material Icons -->
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Round" rel="stylesheet">
  <!-- CSS Files -->
  <link id="pagestyle" href="../assets/css/material-dashboard.css?v=3.1.0" rel="stylesheet" />
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script src="~/js/data.js"></script>
</head>

<body class="g-sidenav-show bg-gray-200">
  <div class="mx-3">
  <aside class="sidenav navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-start ms-3   bg-gradient-dark" id="sidenav-main">
   
        <a class="btn bg-gradient-secondary w-100 my-0"  href="/New?user=@user" type="button">New Message</a>
    
    <hr class="horizontal light mt-0 mb-2">
    <div class="collapse navbar-collapse  w-auto " id="sidenav-collapse-main">
      <ul class="navbar-nav">
        <li class="nav-item">
          <a class="nav-link text-white " href="javascript:;">
            <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
              <i class="material-icons opacity-10">mail</i>
            </div>
            <span class="nav-link-text ms-1">Inbox</span>
          </a>
        </li>
         <li class="nav-item">
          <a class="nav-link text-white " href="javascript:;">
            <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
              <i class="material-icons opacity-10">dashboard</i>
            </div>
            <span class="nav-link-text ms-1">Sent</span>
          </a>
        </li>
      </ul>
    </div>
    <div class="sidenav-footer position-absolute w-100 bottom-0 ">
      <div class="mx-3">
        <a class="btn bg-gradient-primary w-100" asp-page="Sigin" type="button">Logout</a>
      </div>
    </div>
  </aside>
  <div class="main-content position-relative max-height-vh-100 h-100">
    <!-- Navbar -->
    
    <!-- End Navbar -->
    <div class="container-fluid px-2 px-md-4">
      <div class="page-header min-height-300 border-radius-xl mt-4" style="background-image: url('https://images.unsplash.com/photo-1531512073830-ba890ca4eba2?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1920&q=80');">
        <span class="mask  bg-gradient-primary  opacity-6"></span>
      </div>
      <div class="card card-body mx-3 mx-md-4 mt-n6">
         <div class="row gx-4 mb-2">
          <div class="col-auto">
            <div class="avatar avatar-xl position-relative">
              <img src="../assets/img/bruce-mars.jpg" alt="profile_image" class="w-100 border-radius-lg shadow-sm">
            </div>
          </div>
          <div class="col-auto my-auto">
            <div class="h-100">
              <h5 class="mb-1" id="userName">
               @user
              </h5>
              <p class="mb-0 font-weight-normal text-sm">
                Best user ever
              </p>
            </div>
          </div>
        <form>
          <div class="form-group">Send to:</label>
            <input type="username" class="form-control border" id="receiver" placeholder="@@Username">
            <div id="receiver-suggestions"></div>
          </div>
       
        
          <div class="form-group mb-3">
            <label for="TextArea">Write your message here</label>
            <textarea class="form-control border" id="TextArea" rows="3"></textarea>
          </div>
            <a type="submit" class="btn bg-gradient-primary w-20" id="sendMail" onclick="sendMessage()">Send</a>
        </form>
      </div>
    </div>
    <footer class="footer py-4 ">
     
    </footer>
     

  <!--   Core JS Files   -->
  <script src="../assets/js/core/popper.min.js"></script>
  <script src="../assets/js/core/bootstrap.min.js"></script>
  <script src="../assets/js/plugins/perfect-scrollbar.min.js"></script>
  <script src="../assets/js/plugins/smooth-scrollbar.min.js"></script>
  <script>
    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
      var options = {
        damping: '0.5'
      }
      Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }
  </script>
  <!-- Github buttons -->
  <script async defer src="https://buttons.github.io/buttons.js"></script>
  </script>
  <!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
  <script src="../assets/js/material-dashboard.min.js?v=3.1.0"></script>
  <script>
    function sendMessage()
{
    var sender = document.getElementById('userName').innerText;
    var receiver = document.getElementById('receiver').value;
    var message = document.getElementById("TextArea").value;
    console.log('sender: ' + sender + ', receiver: ' + receiver + ', message: ' + message);
    connection.invoke("SendPersonal", sender, receiver, message)
    .catch(function (err) {
        return console.error(err.toString());
    }
    );
};

    
  </script>
</body>
<script>
const receiverInput = document.getElementById('receiver');
const receiverSuggestionsContainer = document.getElementById('receiver-suggestions');

receiverInput.addEventListener('input', function() {
  const searchText = receiverInput.value;

  receiverSuggestionsContainer.innerHTML = '';

  const xhr = new XMLHttpRequest();
  xhr.open('GET', '/User/FindReceivers?search=' + searchText, true);

  xhr.onreadystatechange = function() {
    if (xhr.readyState === XMLHttpRequest.DONE) {
      if (xhr.status === 200) {
        const response = JSON.parse(xhr.responseText);
        const suggestions = response;

        suggestions.forEach(function(suggestion) {
          const suggestionElement = document.createElement('div');
          suggestionElement.textContent = suggestion;
          suggestionElement.classList.add('suggestion-item');

          suggestionElement.addEventListener('click', function() {
            receiverInput.value = suggestion;
            receiverSuggestionsContainer.innerHTML = '';
          });

          receiverSuggestionsContainer.appendChild(suggestionElement);
        });

        if (suggestions.length === 0) {
          const noResultsElement = document.createElement('div');
          noResultsElement.classList.add('suggestion-item', 'disabled');
          receiverSuggestionsContainer.appendChild(noResultsElement);
        }
      } else {
      
      }
    }
  };

  xhr.send();
});

receiverInput.addEventListener('keydown', function(event) {
  const suggestionItems = receiverSuggestionsContainer.querySelectorAll('.suggestion-item');
  let highlightedItemIndex = -1;

  suggestionItems.forEach(function(item, index) {
    if (item.classList.contains('highlight')) {
      highlightedItemIndex = index;
    }
  });

  if (event.key === 'ArrowDown') {
    event.preventDefault();

    if (highlightedItemIndex === suggestionItems.length - 1) {
      highlightedItemIndex = -1;
    }

    suggestionItems.forEach(function(item) {
      item.classList.remove('highlight');
    });

    suggestionItems[highlightedItemIndex + 1].classList.add('highlight');
  } else if (event.key === 'ArrowUp') {
    event.preventDefault();

    if (highlightedItemIndex === -1 || highlightedItemIndex === 0) {
      highlightedItemIndex = suggestionItems.length;
    }

    suggestionItems.forEach(function(item) {
      item.classList.remove('highlight');
    });

    suggestionItems[highlightedItemIndex - 1].classList.add('highlight');
  } else if (event.key === 'Enter') {
    event.preventDefault();

    if (highlightedItemIndex !== -1) {
      receiverInput.value = suggestionItems[highlightedItemIndex].textContent;
      receiverSuggestionsContainer.innerHTML = '';
    }
  }
});

receiverInput.addEventListener('blur', function() {
  receiverSuggestions

});

</script>
</html>
    
